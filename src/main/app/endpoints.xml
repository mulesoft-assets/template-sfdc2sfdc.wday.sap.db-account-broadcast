<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:jms="http://www.mulesoft.org/schema/mule/jms" xmlns:batch="http://www.mulesoft.org/schema/mule/batch" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:http="http://www.mulesoft.org/schema/mule/http" 
xmlns="http://www.mulesoft.org/schema/mule/core" 
xmlns:sfdc="http://www.mulesoft.org/schema/mule/sfdc"
xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" 
xmlns:spring="http://www.springframework.org/schema/beans" 

xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/sfdc http://www.mulesoft.org/schema/mule/sfdc/current/mule-sfdc.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/batch http://www.mulesoft.org/schema/mule/batch/current/mule-batch.xsd
http://www.mulesoft.org/schema/mule/jms http://www.mulesoft.org/schema/mule/jms/current/mule-jms.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd">

	
    <flow name="triggerPushFlow"  initialState="started">
        <http:listener config-ref="HttpListenerConfig" doc:name="Push notifications listener" path="/" >

        </http:listener>
        <choice doc:name="Check trigger policy">
            <when expression="#['push' == '${trigger.policy}']">
                <dw:transform-message doc:name="Transform XML to Account">
                    <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload.Envelope.Body.notifications.Notification.*sObject map {
	Id : $.Id,
	ShippingStreet : $.ShippingStreet,
	Site : $.Site,
	LastModifiedDate : $.LastModifiedDate when $.LastModifiedDate != null otherwise null,
	Type : $.Type,
	Website : $.Website,
	Description : $.Description,
	Fax : $.Fax as :string when $.Fax != null otherwise null,
	Industry : $.Industry,
	Name : $.Name,
	NumberOfEmployees : $.NumberOfEmployees as :number{class: "java.lang.Integer"} default 0,
	Description : $.Description,
	Phone : $.Phone as :string when $.Phone != null otherwise null,
	ShippingCity : $.ShippingCity,
	ShippingCountry : $.ShippingCountry,
	ShippingPostalCode : $.ShippingPostalCode as :string when $.ShippingPostalCode != null otherwise null,
	ShippingState : $.ShippingState,
	BillingCity : $.BillingCity,
	BillingCountry : $.BillingCountry,
	BillingPostalCode : $.BillingPostalCode as :string when $.BillingPostalCode != null otherwise null,
	BillingState : $.BillingState,
	BillingStreet : $.BillingStreet
}]]></dw:set-payload>
                </dw:transform-message>

                <serializable-to-byte-array-transformer doc:name="Serializable to Byte Array"/>
		        <jms:outbound-endpoint topic="A" connector-ref="Active_MQ" doc:name="JMS Topic A" />
            </when>
            <otherwise>
                <logger message="Trigger policy has been set to POLL. Skipping this message" level="INFO" doc:name="discard notification"/>
            </otherwise>
        </choice>
        <parse-template doc:name="build soap response" location="src/main/resources/response.xml"/>
		<exception-strategy ref="defaultChoiceExceptionStrategy"
			doc:name="Default Exception Strategy" />
    </flow>

    
    <flow name="triggerFlow"  processingStrategy="synchronous">
        <poll doc:name="fireup Account synchronization">
            <fixed-frequency-scheduler frequency="${polling.frequency}" startDelay="${polling.start.delay}"/>
            <watermark variable="lastQueryDate" default-expression="${watermark.default.expression}" selector="MAX" selector-expression="#[payload.LastModifiedDate]"/>
			<processor-chain doc:name="Policy check">
            <expression-filter expression="#['poll' == '${trigger.policy}']" doc:name="check trigger policy"/>

            <sfdc:query config-ref="SalesforceA" query="dsql:SELECT AccountNumber,BillingCity,BillingCountry,BillingPostalCode,BillingStreet,Description,Fax,Id,Industry,LastModifiedById,LastModifiedDate,Name,NumberOfEmployees,ParentId,Phone FROM Account WHERE (LastModifiedDate &gt; #[flowVars['lastQueryDate']] AND NumberOfEmployees &gt; 5000)" doc:name="query Accounts with filtering criteria from Salesforce Instance A"/>
            </processor-chain>
        </poll>
        <expression-component doc:name="Iterator to List"><![CDATA[list = new ArrayList();

while (payload.hasNext()){
	list.add(payload.next());
}
payload = list;]]></expression-component>
        <serializable-to-byte-array-transformer doc:name="Serializable to Byte Array"/>

        <jms:outbound-endpoint topic="A" connector-ref="Active_MQ" doc:name="JMS Topic A" />
		<exception-strategy ref="defaultChoiceExceptionStrategy"
			doc:name="Default Exception Strategy" />
    </flow>   
</mule>
